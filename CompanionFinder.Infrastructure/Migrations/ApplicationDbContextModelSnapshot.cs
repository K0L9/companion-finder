// <auto-generated />
using System;
using CompanionFinder.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanionFinder.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.AnonymousUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatRoomId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UserIp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.ChatRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("ConversationThemeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ConversationThemeId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.ConversationTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatRoomId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.AnonymousUser", b =>
                {
                    b.HasOne("CompanionFinder.Domain.Entities.Core.ChatRoom", null)
                        .WithMany("Users")
                        .HasForeignKey("ChatRoomId");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.ChatRoom", b =>
                {
                    b.HasOne("CompanionFinder.Domain.Entities.Core.ConversationTheme", "Theme")
                        .WithMany("Chats")
                        .HasForeignKey("ConversationThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.Message", b =>
                {
                    b.HasOne("CompanionFinder.Domain.Entities.Core.ChatRoom", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanionFinder.Domain.Entities.Core.AnonymousUser", "CreatedByUser")
                        .WithMany("Messages")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.AnonymousUser", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.ChatRoom", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CompanionFinder.Domain.Entities.Core.ConversationTheme", b =>
                {
                    b.Navigation("Chats");
                });
#pragma warning restore 612, 618
        }
    }
}
